name: tests

on: [push]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry==1.1.3
        poetry config virtualenvs.create false
        poetry install
    - name: Generate coverage report
      run: begin test-coverage@ci
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        yml: ./codecov.yml 
        fail_ci_if_error: true

  test-3-7:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry==1.1.3
        poetry config virtualenvs.create false
        poetry install
    - name: Run tests against python 3.7
      run: begin tests@ci

  test-3-8:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry==1.1.3
        poetry config virtualenvs.create false
        poetry install
    - name: Run tests against python 3.8
      run: begin tests@ci

  test-3-9:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry==1.1.3
        poetry config virtualenvs.create false
        poetry install
    - name: Run tests against python 3.9
      run: begin tests@ci

  test-3-10:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry==1.1.3
        poetry config virtualenvs.create false
        poetry install
    - name: Run tests against python 3.10
      run: begin tests@ci
